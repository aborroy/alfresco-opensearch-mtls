services:

  os1:
    image: opensearchproject/opensearch:${OPENSEARCH_TAG}
    environment:
      cluster.name: opensearch
      node.name: os1
      discovery.seed_hosts: os1,os2
      cluster.initial_master_nodes: os1,os2
      bootstrap.memory_lock: "true"
      network.host: "0.0.0.0"
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      plugins.security.ssl.transport.pemkey_filepath: certificates/os1/os1.key
      plugins.security.ssl.transport.pemcert_filepath: certificates/os1/os1.pem
      plugins.security.ssl.http.pemkey_filepath: certificates/os1/os1.key
      plugins.security.ssl.http.pemcert_filepath: certificates/os1/os1.pem
      plugins.security.ssl.http.enabled: true
      plugins.security.ssl.http.pemtrustedcas_filepath: certificates/ca/ca.pem
      plugins.security.ssl.transport.enabled: true
      plugins.security.ssl.transport.pemtrustedcas_filepath: certificates/ca/ca.pem
      plugins.security.ssl.transport.enforce_hostname_verification: false
      plugins.security.allow_unsafe_democertificates: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    command: >
      sh -c 'echo "sleep 30 && chmod +x /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh &&
             /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
             -cd /usr/share/opensearch/config/opensearch-security -icl -nhnv \
             -cacert /usr/share/opensearch/config/certificates/ca/ca.pem \
             -cert /usr/share/opensearch/config/certificates/ca/admin.pem \
             -key /usr/share/opensearch/config/certificates/ca/admin.key -h localhost &" >> /usr/share/opensearch/apply-securityadmin.sh &&
             chmod +x /usr/share/opensearch/apply-securityadmin.sh &&
             /usr/share/opensearch/apply-securityadmin.sh &
             /usr/share/opensearch/opensearch-docker-entrypoint.sh'
    healthcheck:
      test: ["CMD-SHELL", "curl -f --cert /usr/share/opensearch/config/certificates/ca/admin.pem --key /usr/share/opensearch/config/certificates/ca/admin.key --cacert /usr/share/opensearch/config/certificates/ca/ca.pem https://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5 
    volumes:
      - ./opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ./certs:/usr/share/opensearch/config/certificates:ro

  os2:
    image: opensearchproject/opensearch:${OPENSEARCH_TAG}
    environment:
      cluster.name: opensearch
      node.name: os2
      discovery.seed_hosts: os1,os2
      cluster.initial_master_nodes: os1,os2
      bootstrap.memory_lock: "true"
      network.host: "0.0.0.0"
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      plugins.security.ssl.transport.pemkey_filepath: certificates/os2/os2.key
      plugins.security.ssl.transport.pemcert_filepath: certificates/os2/os2.pem
      plugins.security.ssl.http.pemkey_filepath: certificates/os2/os2.key
      plugins.security.ssl.http.pemcert_filepath: certificates/os2/os2.pem
      plugins.security.ssl.http.enabled: true
      plugins.security.ssl.http.pemtrustedcas_filepath: certificates/ca/ca.pem
      plugins.security.ssl.transport.enabled: true
      plugins.security.ssl.transport.pemtrustedcas_filepath: certificates/ca/ca.pem
      plugins.security.ssl.transport.enforce_hostname_verification: false
      plugins.security.allow_unsafe_democertificates: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    command: >
      sh -c 'echo "sleep 30 && chmod +x /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh &&
             /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
             -cd /usr/share/opensearch/config/opensearch-security -icl -nhnv \
             -cacert /usr/share/opensearch/config/certificates/ca/ca.pem \
             -cert /usr/share/opensearch/config/certificates/ca/admin.pem \
             -key /usr/share/opensearch/config/certificates/ca/admin.key -h localhost &" >> /usr/share/opensearch/apply-securityadmin.sh &&
             chmod +x /usr/share/opensearch/apply-securityadmin.sh &&
             /usr/share/opensearch/apply-securityadmin.sh &
             /usr/share/opensearch/opensearch-docker-entrypoint.sh'
    healthcheck:
      test: ["CMD-SHELL", "curl -f --cert /usr/share/opensearch/config/certificates/ca/admin.pem --key /usr/share/opensearch/config/certificates/ca/admin.key --cacert /usr/share/opensearch/config/certificates/ca/ca.pem https://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5 
    volumes:
      - ./opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ./certs:/usr/share/opensearch/config/certificates:ro

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:${OPENSEARCH_DASHBOARDS_TAG}
    environment:
      OPENSEARCH_HOSTS: '["https://os1:9200","https://os2:9200"]'
      DISABLE_INSTALL_DEMO_CONFIG: "true"
    depends_on:
      os1:
        condition: service_healthy
      os2:
        condition: service_healthy
    volumes:
      - ./certs:/usr/share/opensearch-dashboards/config/certificates:ro
      - ./opensearch-dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    ports:
      - 5601:5601

  live-indexing:
    image: quay.io/alfresco/alfresco-elasticsearch-live-indexing:${LIVE_INDEXING_TAG}
    depends_on:
      os1:
        condition: service_healthy
      os2:
        condition: service_healthy
      alfresco:
        condition: service_healthy
    environment:
      SPRING_ELASTICSEARCH_REST_URIS: https://os1:9200,https://os2:9200
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL: http://transform-core-aio:8090/transform/config
      ALFRESCO_SHAREDFILESTORE_BASEURL: http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file/
      JAVA_OPTS: '
          -Djavax.net.ssl.trustStore=/tmp/esc.truststore
          -Djavax.net.ssl.trustStoreType=PKCS12
          -Djavax.net.ssl.trustStorePassword=truststore
          -Djavax.net.ssl.keyStore=/tmp/esc.keystore
          -Djavax.net.ssl.keyStoreType=PKCS12
          -Djavax.net.ssl.keyStorePassword=keystore
      '      
    volumes:
      - ./keystore/esc.keystore:/tmp/esc.keystore:ro
      - ./keystore/esc.truststore:/tmp/esc.truststore:ro

  reindexing:
    image: quay.io/alfresco/alfresco-elasticsearch-reindexing:${LIVE_INDEXING_TAG}
    depends_on:
      os1:
        condition: service_healthy
      os2:
        condition: service_healthy
      alfresco:
        condition: service_healthy
    environment:
      SPRING_ELASTICSEARCH_REST_URIS: https://os1:9200,https://os2:9200
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/alfresco
      ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL: http://transform-core-aio:8090/transform/config
      ALFRESCO_REINDEX_PREFIXES: file:///opt/reindex.prefixes-file.json
      JAVA_OPTS: '
          -Djavax.net.ssl.trustStore=/tmp/esc.truststore
          -Djavax.net.ssl.trustStoreType=PKCS12
          -Djavax.net.ssl.trustStorePassword=truststore
          -Djavax.net.ssl.keyStore=/tmp/esc.keystore
          -Djavax.net.ssl.keyStoreType=PKCS12
          -Djavax.net.ssl.keyStorePassword=keystore
      '      
    volumes:
      - ./keystore/esc.keystore:/tmp/esc.keystore:ro
      - ./keystore/esc.truststore:/tmp/esc.truststore:ro      
      - ./reindex.prefixes-file.json:/opt/reindex.prefixes-file.json